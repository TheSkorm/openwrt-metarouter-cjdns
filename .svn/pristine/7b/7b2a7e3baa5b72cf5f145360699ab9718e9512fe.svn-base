--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -42,6 +42,7 @@
 #define	OPCODE_BE_4K		0x20	/* Erase 4KiB block */
 #define	OPCODE_BE_32K		0x52	/* Erase 32KiB block */
 #define	OPCODE_CHIP_ERASE	0xc7	/* Erase whole flash chip */
+#define	OPCODE_BE_4K_ALT	0xd7	/* Erase 4KiB block */
 #define	OPCODE_SE		0xd8	/* Sector erase (usually 64KiB) */
 #define	OPCODE_RDID		0x9f	/* Read JEDEC ID */
 
@@ -599,6 +600,7 @@ struct flash_info {
 
 	u16		flags;
 #define	SECT_4K		0x01		/* OPCODE_BE_4K works uniformly */
+#define	SECT_4K_ALT	0x02		/* OPCODE_BE_4K_ALT works uniformly */
 };
 
 
@@ -626,6 +628,10 @@ static struct flash_info __devinitdata m
 	{ "mx25l12805d", 0xc22018, 0, 64 * 1024, 256, },
 	{ "mx25l12855e", 0xc22618, 0, 64 * 1024, 256, },
 
+	/* PMC -- pm25x "blocks" are 32K, sectors are 4K */
+	{ "pm25lv512", 0, 0, 32 * 1024, 2, SECT_4K_ALT },
+	{ "pm25lv010", 0, 0, 32 * 1024, 4, SECT_4K_ALT },
+
 	/* Spansion -- single (large) sector size only, at least
 	 * for the chips listed here (without boot sectors).
 	 */
@@ -807,6 +813,9 @@ static int __devinit m25p_probe(struct s
 	if (info->flags & SECT_4K) {
 		flash->erase_opcode = OPCODE_BE_4K;
 		flash->mtd.erasesize = 4096;
+	} else if (info->flags & SECT_4K_ALT) {
+		flash->erase_opcode = OPCODE_BE_4K_ALT;
+		flash->mtd.erasesize = 4096;
 	} else {
 		flash->erase_opcode = OPCODE_SE;
 		flash->mtd.erasesize = info->sector_size;
